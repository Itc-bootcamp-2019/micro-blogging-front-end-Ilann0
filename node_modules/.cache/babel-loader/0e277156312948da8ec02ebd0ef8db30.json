{"ast":null,"code":"import _objectSpread from \"/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetManager.jsx\";\nimport React from \"react\";\nimport TweetList from \"./TweetList\";\nimport CreateTweet from \"./CreateTweet\";\nimport { getTweets, postTweet } from '../lib/api';\nimport TweetManagerContext from \"../contexts/TweetManagerContext\";\n\nclass TweetManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [],\n      tweetCounter: 0,\n      onPost: this.updateLocalTweets.bind(this)\n    };\n  }\n\n  updateLocalTweets(tweet) {\n    const timeStamp = new Date();\n    const timeStampString = timeStamp.toISOString();\n    const tweetObj = {\n      content: tweet,\n      userName: 'Arnold Schwarzenegger',\n      date: timeStampString\n    };\n    postTweet(tweetObj).then(response => console.log(response)).catch(() => alert(\"We encountered a problem with the server.\\nPlease try again later :)\"));\n    this.setState(prevState => {\n      return {\n        tweets: [_objectSpread({}, tweetObj, {\n          id: prevState.tweetCounter + 1\n        }), ...prevState.tweets],\n        tweetCounter: ++prevState.tweetCounter\n      };\n    });\n  }\n\n  updateData() {\n    getTweets().then(response => this.setState({\n      tweets: response.data.tweets\n    })).catch(response => response.status > 399 && alert(\"We encountered a problem with the server.\\nPlease try again later :)\"));\n  }\n\n  componentDidMount() {\n    this.updateData();\n    this.fetchTweetsInterval = setInterval(this.updateData, 15000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.fetchTweetsInterval);\n  }\n\n  render() {\n    return React.createElement(TweetManagerContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CreateTweet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(TweetList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TweetManager;","map":{"version":3,"sources":["/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetManager.jsx"],"names":["React","TweetList","CreateTweet","getTweets","postTweet","TweetManagerContext","TweetManager","Component","constructor","props","state","tweets","tweetCounter","onPost","updateLocalTweets","bind","tweet","timeStamp","Date","timeStampString","toISOString","tweetObj","content","userName","date","then","response","console","log","catch","alert","setState","prevState","id","updateData","data","status","componentDidMount","fetchTweetsInterval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC;AAGA,OAAOC,mBAAP,MAAgC,iCAAhC;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,YAAY,EAAE,CAFL;AAGTC,MAAAA,MAAM,EAAE,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B;AAHC,KAAb;AAKH;;AAEDD,EAAAA,iBAAiB,CAACE,KAAD,EAAQ;AACrB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,eAAe,GAAGF,SAAS,CAACG,WAAV,EAAxB;AACA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAEN,KADI;AAEbO,MAAAA,QAAQ,EAAE,uBAFG;AAGbC,MAAAA,IAAI,EAAEL;AAHO,KAAjB;AAKAf,IAAAA,SAAS,CAACiB,QAAD,CAAT,CAAoBI,IAApB,CAA0BC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAvC,EACoBG,KADpB,CAC0B,MAAMC,KAAK,CAAC,sEAAD,CADrC;AAEA,SAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,aAAO;AACJrB,QAAAA,MAAM,EAAE,mBAAMU,QAAN;AAAgBY,UAAAA,EAAE,EAAED,SAAS,CAACpB,YAAV,GAAyB;AAA7C,YAAiD,GAAGoB,SAAS,CAACrB,MAA9D,CADJ;AAEJC,QAAAA,YAAY,EAAE,EAAEoB,SAAS,CAACpB;AAFtB,OAAP;AAIH,KALD;AAMH;;AAEDsB,EAAAA,UAAU,GAAG;AACT/B,IAAAA,SAAS,GAAGsB,IAAZ,CAAiBC,QAAQ,IAAI,KAAKK,QAAL,CAAc;AACvCpB,MAAAA,MAAM,EAAEe,QAAQ,CAACS,IAAT,CAAcxB;AADiB,KAAd,CAA7B,EAEIkB,KAFJ,CAEWH,QAAD,IAAeA,QAAQ,CAACU,MAAT,GAAkB,GAAlB,IAAyBN,KAAK,CAAC,sEAAD,CAFvD;AAGH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,UAAL;AACA,SAAKI,mBAAL,GAA2BC,WAAW,CAAC,KAAKL,UAAN,EAAkB,KAAlB,CAAtC;AACH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,mBAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAG,KAAKhC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAlDsC;;AAqD3C,eAAeJ,YAAf","sourcesContent":["import React from \"react\"\n\nimport TweetList from \"./TweetList\"\nimport CreateTweet from \"./CreateTweet\"\n\nimport { getTweets, postTweet } from '../lib/api'\n\n\nimport TweetManagerContext from \"../contexts/TweetManagerContext\"\n\nclass TweetManager extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tweets: [],\n            tweetCounter: 0,\n            onPost: this.updateLocalTweets.bind(this)\n        }\n    }\n\n    updateLocalTweets(tweet) {\n        const timeStamp = new Date()\n        const timeStampString = timeStamp.toISOString()\n        const tweetObj = {\n            content: tweet,\n            userName: 'Arnold Schwarzenegger',\n            date: timeStampString,\n        }\n        postTweet(tweetObj).then((response) => console.log(response))\n                           .catch(() => alert(\"We encountered a problem with the server.\\nPlease try again later :)\"))\n        this.setState(prevState => {\n            return {\n               tweets: [ {...tweetObj, id: prevState.tweetCounter + 1}, ...prevState.tweets ],\n               tweetCounter: ++prevState.tweetCounter\n            }\n        })\n    }\n\n    updateData() {\n        getTweets().then(response => this.setState({\n            tweets: response.data.tweets,\n        })).catch((response) => (response.status > 399 && alert(\"We encountered a problem with the server.\\nPlease try again later :)\")))\n    }\n\n    componentDidMount() {\n        this.updateData()\n        this.fetchTweetsInterval = setInterval(this.updateData, 15000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.fetchTweetsInterval)\n    }\n\n    render() {\n        return (\n            <TweetManagerContext.Provider value={ this.state }>\n                <CreateTweet />\n                <TweetList />\n            </TweetManagerContext.Provider>\n        )\n    }\n}\n\nexport default TweetManager"]},"metadata":{},"sourceType":"module"}