{"ast":null,"code":"var _jsxFileName = \"/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetManager.jsx\";\nimport React from \"react\";\nimport TweetList from \"./TweetList\";\nimport CreateTweet from \"./CreateTweet\";\nimport { getTweets, postTweet } from '../lib/api';\nimport TweetManagerContext from \"../contexts/TweetManagerContext\";\n\nclass TweetManager extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.updateTweets = this.updateTweets.bind(this);\n    this.state = {\n      tweets: [],\n      onPost: this.updateTweets,\n      requestPending: false,\n      initialLoad: true\n    };\n  }\n\n  updateTweets(tweet) {\n    setTimeout(() => {}, 2000);\n    const timeStamp = new Date();\n    const userName = localStorage.getItem('username');\n    const tweetObj = {\n      userName: !!userName ? userName : 'anonymous',\n      content: tweet,\n      date: timeStamp.toISOStrring()\n    };\n    postTweet(tweetObj).then(response => {\n      console.log(response);\n      this.setState({\n        requestPending: false\n      });\n    }).catch(() => alert(\"We encountered a problem with the server.\\nPlease try again later :)\"));\n    this.setState(prevState => {\n      return {\n        tweets: [tweetObj, ...prevState.tweets],\n        requestPending: false\n      };\n    });\n  }\n\n  updateData() {\n    getTweets().then(response => this.setState({\n      tweets: response.data.tweets,\n      initialLoad: false\n    })).catch(response => response.status > 399 && alert(\"We encountered a problem with the server.\\nPlease try again later :)\"));\n  }\n\n  componentDidMount() {\n    this.updateData();\n    this.fetchTweetsInterval = setInterval(this.updateData.bind(this), 10000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.fetchTweetsInterval);\n  }\n\n  render() {\n    return React.createElement(TweetManagerContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CreateTweet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(TweetList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TweetManager;","map":{"version":3,"sources":["/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetManager.jsx"],"names":["React","TweetList","CreateTweet","getTweets","postTweet","TweetManagerContext","TweetManager","PureComponent","constructor","props","updateTweets","bind","state","tweets","onPost","requestPending","initialLoad","tweet","setTimeout","timeStamp","Date","userName","localStorage","getItem","tweetObj","content","date","toISOStrring","then","response","console","log","setState","catch","alert","prevState","updateData","data","status","componentDidMount","fetchTweetsInterval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC;AAGA,OAAOC,mBAAP,MAAgC,iCAAhC;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,aAAjC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,MAAM,EAAE,KAAKJ,YAFJ;AAGTK,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAEDN,EAAAA,YAAY,CAACO,KAAD,EAAQ;AAChBC,IAAAA,UAAU,CAAC,MAAM,CAAE,CAAT,EAAW,IAAX,CAAV;AACA,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAMC,QAAQ,GAAG;AACbH,MAAAA,QAAQ,EAAE,CAAC,CAACA,QAAF,GAAaA,QAAb,GAAwB,WADrB;AAEbI,MAAAA,OAAO,EAAER,KAFI;AAGbS,MAAAA,IAAI,EAAEP,SAAS,CAACQ,YAAV;AAHO,KAAjB;AAKAvB,IAAAA,SAAS,CAACoB,QAAD,CAAT,CACKI,IADL,CACWC,QAAD,IAAc;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAuB,WAAKG,QAAL,CAAc;AAAEjB,QAAAA,cAAc,EAAE;AAAlB,OAAd;AAAyC,KADzF,EAEKkB,KAFL,CAEW,MAAMC,KAAK,CAAC,sEAAD,CAFtB;AAGA,SAAKF,QAAL,CAAcG,SAAS,IAAI;AACvB,aAAO;AACHtB,QAAAA,MAAM,EAAE,CAAEW,QAAF,EAAY,GAAGW,SAAS,CAACtB,MAAzB,CADL;AAEHE,QAAAA,cAAc,EAAE;AAFb,OAAP;AAIH,KALD;AAOH;;AAEDqB,EAAAA,UAAU,GAAG;AACTjC,IAAAA,SAAS,GACJyB,IADL,CACUC,QAAQ,IAAI,KAAKG,QAAL,CAAc;AACpBnB,MAAAA,MAAM,EAAEgB,QAAQ,CAACQ,IAAT,CAAcxB,MADF;AAEpBG,MAAAA,WAAW,EAAE;AAFO,KAAd,CADtB,EAMMiB,KANN,CAMaJ,QAAD,IAAeA,QAAQ,CAACS,MAAT,GAAkB,GAAlB,IAAyBJ,KAAK,CAAC,sEAAD,CANzD;AAQH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,UAAL;AACA,SAAKI,mBAAL,GAA2BC,WAAW,CAAC,KAAKL,UAAL,CAAgBzB,IAAhB,CAAqB,IAArB,CAAD,EAA6B,KAA7B,CAAtC;AACH;;AAED+B,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,mBAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAG,KAAKhC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA5D0C;;AA+D/C,eAAeN,YAAf","sourcesContent":["import React from \"react\"\n\nimport TweetList from \"./TweetList\"\nimport CreateTweet from \"./CreateTweet\"\n\nimport { getTweets, postTweet } from '../lib/api'\n\n\nimport TweetManagerContext from \"../contexts/TweetManagerContext\"\n\nclass TweetManager extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.updateTweets = this.updateTweets.bind(this)\n        this.state = {\n            tweets: [],\n            onPost: this.updateTweets,\n            requestPending: false,\n            initialLoad: true,\n        }\n    }\n\n    updateTweets(tweet) {\n        setTimeout(() => {}, 2000)\n        const timeStamp = new Date()\n        const userName = localStorage.getItem('username')\n        const tweetObj = {\n            userName: !!userName ? userName : 'anonymous',\n            content: tweet,\n            date: timeStamp.toISOStrring()\n        }\n        postTweet(tweetObj)\n            .then((response) => {console.log(response); this.setState({ requestPending: false })})\n            .catch(() => alert(\"We encountered a problem with the server.\\nPlease try again later :)\"))\n        this.setState(prevState => {\n            return {\n                tweets: [ tweetObj, ...prevState.tweets ],\n                requestPending: false,\n            }\n        })\n\n    }\n\n    updateData() {\n        getTweets()\n            .then(response => this.setState({\n                        tweets: response.data.tweets,\n                        initialLoad: false,\n                    }\n                )\n            ).catch((response) => (response.status > 399 && alert(\"We encountered a problem with the server.\\nPlease try again later :)\")))\n\n    }\n\n    componentDidMount() {\n        this.updateData()\n        this.fetchTweetsInterval = setInterval(this.updateData.bind(this), 10000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.fetchTweetsInterval)\n    }\n\n    render() {\n        return (\n            <TweetManagerContext.Provider value={ this.state }>\n                <CreateTweet />\n                <TweetList />\n            </TweetManagerContext.Provider>\n        )\n    }\n}\n\nexport default TweetManager"]},"metadata":{},"sourceType":"module"}