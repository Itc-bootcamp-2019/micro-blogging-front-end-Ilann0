{"ast":null,"code":"var _jsxFileName = \"/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetList.jsx\";\nimport React, { useEffect } from \"react\";\nimport Tweet from \"./Tweet\";\nimport TweetManagerContext from \"../contexts/TweetManagerContext\";\n\nfunction TweetList() {\n  return React.createElement(TweetManagerContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, ({\n    tweets,\n    initialLoad,\n    requestPending\n  }) => {\n    if (initialLoad && requestPending) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      return tweets.map(tweet => React.createElement(Tweet, {\n        key: tweet.date,\n        tweet: tweet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n  });\n}\n\nexport default TweetList;","map":{"version":3,"sources":["/Users/ilannohayon/dev/ITC/Micro Blog/micro-blogging-front-end-Ilann0/blog/src/components/TweetList.jsx"],"names":["React","useEffect","Tweet","TweetManagerContext","TweetList","tweets","initialLoad","requestPending","map","tweet","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,mBAAP,MAAgC,iCAAhC;;AAEA,SAASC,SAAT,GAAqB;AACjB,SACI,oBAAC,mBAAD,CAAqB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,GAAD,KAA6C;AACzC,QAAID,WAAW,IAAIC,cAAnB,EAAkC;AAC9B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAFD,MAEO;AACH,aAAOF,MAAM,CAACG,GAAP,CAAYC,KAAK,IACpB,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAGA,KAAK,CAACC,IAAnB;AACO,QAAA,KAAK,EAAGD,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAKH;AACJ,GAZT,CADJ;AAiBH;;AAED,eAAeL,SAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport Tweet from \"./Tweet\"\n\nimport TweetManagerContext from \"../contexts/TweetManagerContext\"\n\nfunction TweetList() {\n    return (\n        <TweetManagerContext.Consumer>\n            {\n                ({ tweets, initialLoad, requestPending }) => {\n                    if (initialLoad && requestPending){\n                        return <p>Loading</p>\n                    } else {\n                        return tweets.map( tweet => (\n                            <Tweet key={ tweet.date }\n                                   tweet={ tweet }\n                            />)\n                        )\n                    }\n                }\n            }\n        </TweetManagerContext.Consumer>\n    )\n}\n\nexport default TweetList"]},"metadata":{},"sourceType":"module"}